# use this to disable flto optimizations:
#   make NO_FLTO=1
# and this to enable verbose mode:
#   make V=1

#
# SPDX-License-Identifer: GPL-2.0-or-later
#
# Copyright (C) 2014  Vyacheslav Trushkin
# Copyright (C) 2020  Boian Bonev
#
# This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#

PACKAGE_NAME:=@PACKAGE_NAME@
TARGET:=$(PACKAGE_NAME).so
VER:=@PACKAGE_VERSION@

SRCS:=$(wildcard *.c)
OBJS:=$(patsubst %c,%o,$(patsubst %,bld/%,$(SRCS)))
DEPS:=$(OBJS:.o=.d)

ifndef NO_FLTO
CFLAGS?=-O3 -fno-stack-protector -mno-stackrealign
CFLAGS+=-flto
LDFLAGS+=$(CFLAGS)
else
CFLAGS?=-O3 -fno-stack-protector -mno-stackrealign
endif

CFLAGS+=-I../include -fPIC

PKG_CONFIG?=pkg-config
NCCC?=$(shell $(PKG_CONFIG) --cflags ncursesw)
NCLD?=$(shell $(PKG_CONFIG) --libs ncursesw)
ifeq ("$(NCLD)","")
NCCC:=$(shell $(PKG_CONFIG) --cflags ncurses)
NCLD:=$(shell $(PKG_CONFIG) --libs ncurses)
endif
ifeq ("$(NCLD)","")
NCCC:=
NCLD:=-lncursesw
endif

MYCFLAGS:=$(CPPFLAGS) $(CFLAGS) $(NCCC) -std=gnu90 -Wall -Wextra
MYLIBS=$(LIBS) $(NCLD)
MYLDFLAGS=$(LDFLAGS)
STRIP?=strip

prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
sbindir=@sbindir@
libdir=@libdir@
includedir=@includedir@

ifeq ("$(V)","1")
Q:=
E:=@true
else
Q:=@
E:=@echo
endif

all: $(TARGET)

$(PACKAGE_NAME).so: $(PACKAGE_NAME).so.@PACKAGE_MAJOR_VERSION@.@PACKAGE_MINOR_VERSION@
	$(E) LN $@
	$(Q)ln -sf $^ $@

$(PACKAGE_NAME).so.@PACKAGE_MAJOR_VERSION@.@PACKAGE_MINOR_VERSION@: $(OBJS)
	$(E) LD $@
	$(Q)$(CC) -shared -Wl,-soname,$(@F) -fPIC -o $@ $(MYLDFLAGS) $^ $(MYLIBS)

bld/%.o: %.c bld/.mkdir
	$(E) DE $@
	$(Q)$(CC) $(MYCFLAGS) -MM -MT $@ -MF $(patsubst %.o,%.d,$@) $<
	$(E) CC $@
	$(Q)$(CC) $(MYCFLAGS) -c -o $@ $<

clean:
	$(E) CLEAN
	$(Q)rm -rf ./bld $(TARGET)

install: $(TARGET)
	$(E) INSTALL $(TARGET)
	$(Q)install -TD -m 0755 $(TARGET) $(DESTDIR)/$(libdir)/$(PACKAGE_NAME).so.@PACKAGE_MAJOR_VERSION@.@PACKAGE_MINOR_VERSION@
	$(Q)ln -sf $(PACKAGE_NAME).so.@PACKAGE_MAJOR_VERSION@.@PACKAGE_MINOR_VERSION@ $(DESTDIR)$(libdir)/$(PACKAGE_NAME).so
	$(Q)install -TD -m 0644 @BASEDIR@/src/include/libiotop.h $(DESTDIR)$(includedir)/libiotop.h
	$(Q)install -TD -m 0644 libiotop.pc $(DESTDIR)$(libdir)/pkgconfig/libiotop.pc

uninstall:
	$(E) UNINSTALL $(TARGET)
	$(Q)rm $(DESTDIR)/$(libdir)/$(PACKAGE_NAME).so
	$(Q)rm $(DESTDIR)/$(libdir)/$(PACKAGE_NAME).so.@PACKAGE_MAJOR_VERSION@.@PACKAGE_MINOR_VERSION@
	$(Q)rm $(DESTDIR)$(includedir)/libiotop.h

bld/.mkdir:
	$(Q)mkdir -p bld
	$(Q)touch bld/.mkdir

mkotar:
	$(MAKE) clean
	-dh_clean
	tar \
		--xform 's,^[.],iotop-$(VER),' \
		--exclude ./.git \
		--exclude ./.gitignore \
		--exclude ./debian \
		-Jcvf ../iotop-c_$(VER).orig.tar.xz .
	-rm -f ../iotop-c_$(VER).orig.tar.xz.asc
	gpg -a --detach-sign ../iotop-c_$(VER).orig.tar.xz
	cp -fa ../iotop-c_$(VER).orig.tar.xz ../iotop-$(VER).tar.xz
	cp -fa ../iotop-c_$(VER).orig.tar.xz.asc ../iotop-$(VER).tar.xz.asc

-include $(DEPS)

.PHONY: clean install uninstall
